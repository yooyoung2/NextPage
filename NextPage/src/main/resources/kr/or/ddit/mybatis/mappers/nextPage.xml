<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 강은비 비참한심정으로 xml만듬 -->
<mapper namespace="kr.or.ddit.school.manager.dao.SchoolDAO">
	
	<!-- 학교 중복검사 -->
	<select id="checkSch" parameterType="SchoolVO" resultType="int">
		SELECT COUNT(*)
		FROM SCHOOL
		WHERE SCH_ADDR1 = #{schAddr1}
		AND SCH_NM = #{schNm}
	</select>

	<!-- 아이디 중복검사 -->
	<select id="checkSchId" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM SCHOOL
		WHERE SCH_ID=#{schId}
	</select>
	
	<select id="selectTotalRecord" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM PAY_BRKDWN P, CART C, PRD_ITEMS PI
		WHERE P.CART_ID = C.CART_ID
		AND PI.PROD_ID = C.PROD_ID
		AND SCH_ID = #{schId}
	</select>


	<select id="selectPayList" parameterType="PagingVO"	resultType="PayVO">
	WITH SORTPAY AS (
		SELECT PB.PAY_ID, PI.PROD_ID, PI.PROD_NM,TO_CHAR(PB.PAY_DATE, 'YYYY-MM-DD') PAY_DATE
		FROM PAY_BRKDWN PB, CART C, PRD_ITEMS PI
		WHERE PB.CART_ID = C.CART_ID
		AND PI.PROD_ID = C.PROD_ID
		AND SCH_ID = #{schId}
		ORDER BY PAY_DATE DESC
	),RNUMPAY AS(
	SELECT SORTPAY.*,ROWNUM RNUM
	FROM SORTPAY
	)
	SELECT *
	FROM RNUMPAY
		<![CDATA[
			WHERE RNUM BETWEEN #{startRow} AND #{endRow}
		]]>
	</select>

	<select id="selectSchool" parameterType="String"
		resultType="SchoolVO">
		SELECT
		SCH_ID
		, SCH_NM
		, SCH_EMAIL
		, SCH_TEL_NUM
		, SCH_POST_NUM
		, SCH_ADDR1
		, SRVC_WHTHR
		, HP_LINK
		, FST_PCH_DATE
		, FST_PCH_STAT
		, SCH_WITHDWRAL
		FROM SCHOOL
		WHERE SCH_ID=#{id}
	</select>

	<select id="selectNPMember" parameterType="String"
		resultType="NpMemberVO">

		SELECT
		NP_MEM_ID
		,MEM_PW
		,MEM_AUTH
		FROM
		NP_MEMBER
		WHERE
		NP_MEM_ID = #{id}
	</select>

	<insert id="insertSchool" parameterType="SchoolVO">
		INSERT INTO SCHOOL
		(
		SCH_ID,
		SCH_NM,
		SCH_EMAIL,
		SCH_TEL_NUM,
		SCH_POST_NUM,
		SCH_ADDR1,
		SCH_ADDR2
		)
		VALUES(
		#{schId,jdbcType=VARCHAR},
		#{schNm,jdbcType=VARCHAR},
		#{schEmail,jdbcType=VARCHAR},
		#{schTelNum,jdbcType=VARCHAR},
		#{schPostNum,jdbcType=VARCHAR},
		#{schAddr1,jdbcType=VARCHAR},
		#{schAddr2,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insertNPMember" parameterType="NpMemberVO">
		INSERT INTO NP_MEMBER(
		NP_MEM_ID
		, MEM_PW
		)
		VALUES (
		#{npMemId,jdbcType=VARCHAR},
		#{memPw,jdbcType=VARCHAR}
		)
	</insert>

	<update id="updateSchool" parameterType="SchoolVO">
		UPDATE
		SCHOOL
		SET
		SCH_EMAIL=#{schEmail, jdbcType=VARCHAR}
		,SCH_TEL_NUM=#{schTelNum,jdbcType=VARCHAR}
		,SCH_POST_NUM=#{schPostNum, jdbcType=VARCHAR}
		,SCH_ADDR1=#{schAddr1, jdbcType=VARCHAR}
		,SCH_NM=#{schNm, jdbcType=VARCHAR}
		WHERE
		SCH_ID = #{schId,jdbcType=VARCHAR}
	</update>


	<update id="updatePass" parameterType="NpMemberVO">
		UPDATE
		NP_MEMBER
		SET
		MEM_PW = #{memPw, jdbcType=VARCHAR}
		WHERE
		NP_MEM_ID = #{npMemId,jdbcType=VARCHAR}
	</update>

	<update id="deleteSchool" parameterType="SchoolVO">
		UPDATE
			SCHOOL
		SET
			SCH_WITHDWRAL='YES'
		WHERE
			SCH_ID = #{schId,jdbcType=VARCHAR}
	</update>
	
	<!-- 
	<resultMap type="CartVO" id="CartMap" autoMapping="true">
		<id property="cartId" column="CART_ID"  />
		<association property="prod" column="CartVO" autoMapping="true">
		</association>
	</resultMap>
	
	
	<select id="selectCartList" parameterType="String" resultMap="CartMap"> -->
	<select id="selectCartList" parameterType="String" resultType="CartVO">
	SELECT
		 C.SCH_ID
		, C.CART_ID
		, C.PROD_ID
		, P.PROD_NM
		, P.PROD_PRICE
	FROM
		CART C, PRD_ITEMS P
	WHERE
		C.PROD_ID = P.PROD_ID 
	AND
		BUY_OK = 'NO'
	AND
		SCH_ID = #{schId} 
	</select>
	
	<delete id="cartDelete" parameterType="CartVO">
		DELETE FROM CART
		WHERE
	    CART_ID = #{cartId}
	    AND SCH_ID = #{schId}
	    AND PROD_ID = #{prodId}
	    AND BUY_OK ='NO'
	</delete>
	
	
	<select id="selectTotalOTO" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM OTO
		WHERE SCH_ID= #{schId}
	</select>

<!-- 1:1문의 목록 -->
<select id="selectOTOList" parameterType="PagingVO" resultType="MyQuestionVO">
	WITH SORTEDBOARD AS (
		SELECT
		    OTO_BRD_NUM
		    ,OTO_BRD_TITLE
		    ,OTO_BRD_CNTNT
		    ,PRGRS_CNDTN
		    ,WRTE_DATE
		FROM OTO
		WHERE SCH_ID=#{schId}
		ORDER BY OTO_BRD_NUM DESC
	), RNUMBOARD AS (
	SELECT ROWNUM RNUM,SORTEDBOARD.*
	FROM SORTEDBOARD
	)
	SELECT *
	FROM RNUMBOARD
	<![CDATA[
			WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
	]]>	
</select>

<!-- 1:1 게시판에 문의 글 쓴거 상세보기 -->
<select id="selectOTODetail" parameterType="int" resultType="MyQuestionVO">
	SELECT
	    SCH_ID,
	    OTO_BRD_TITLE,
	    OTO_BRD_CNTNT,
	    WRTE_DATE
	FROM
	    OTO
	WHERE OTO_BRD_NUM= #{otoBrdNum}
</select>

<!-- 템플릿 구매 시 결제 내역 INSERT -->
<insert id="payListInsert" parameterType="PayVO">
	INSERT INTO PAY_BRKDWN(
		PAY_NUM,
		PAY_ID,
		CART_ID,
		PAY_DATE,
		PAY_MTHD_ID
	)
	VALUES(
		PAY_BRKDWN_SEQ.NEXTVAL,
		#{payId,jdbcType=VARCHAR},
		#{cartId,jdbcType=VARCHAR},
		SYSDATE,
		'card'
	)
</insert>

<!-- 구매 후에 카트 구매했다고 표시해줘버리기 -->
<update id="cartUpdate" parameterType="CartVO">
	UPDATE CART
	SET BUY_OK='OK'
	WHERE CART_ID=#{cartId, jdbcType=VARCHAR}
	AND PROD_ID=#{prodId, jdbcType=VARCHAR}
</update>

<!-- 첫 구매 날짜 업뎃 -->
<update id="saleDateUpdate" parameterType="String">
	UPDATE SCHOOL
	SET FST_PCH_STAT = 'YES'
	, SRVC_WHTHR = 'YES'
	WHERE SCH_ID=#{schId}
</update>

<!-- 첫 구매 상태 바꾸기 -->
<update id="saleStatUpdate" parameterType="String">
	UPDATE SCHOOL
	SET FST_PCH_DATE = SYSDATE
	WHERE SCH_ID=#{schId}
</update>

<!-- 10일 이전부터의 가격책정  -->
<select id="beforeSaleDate" resultType="int">
SELECT
	CEIL( 10000/TO_NUMBER(TO_CHAR( LAST_DAY(SYSDATE),'dd')) * TO_NUMBER(TO_DATE( TRUNC(SYSDATE, 'MM'), 'YYYY-MM-DD') +9 - TO_DATE(SYSDATE,'YYYY-MM-DD'))) MONEY
FROM DUAL
</select>
 
<!-- 11일 이후부터의 가격책정  -->
<select id="afterSaleDate" resultType="int">
SELECT
	CEIL( 10000/TO_NUMBER( TO_CHAR( LAST_DAY( ADD_MONTHS( TRUNC(SYSDATE,'MM'), 1)),'dd')) * TO_NUMBER( TO_DATE( ADD_MONTHS( TRUNC(SYSDATE, 'MM'),1) , 'YYYY-MM-DD') +9 - TO_DATE(SYSDATE,'YYYY-MM-DD'))) MONEY
FROM DUAL
</select>

<!-- 첫 구매시 장바구니 담기 -->
<insert id="insertFPROD" parameterType="String">
INSERT INTO CART(
	CART_ID
	,SCH_ID
	,PROD_ID
	)
VALUES(
	CART_SQE.NEXTVAL
	,#{schId,jdbcType=VARCHAR},
	'FPROD'
	)
</insert>
<insert id="insertDPROD" parameterType="String">
INSERT INTO CART(
	CART_ID
	,SCH_ID
	,PROD_ID
	)
VALUES(
	CART_SQE.NEXTVAL
	,#{schId,jdbcType=VARCHAR},
	'DPROD'
	)
</insert>


<update id="cancelPay" parameterType="String">
	UPDATE SCHOOL
	SET SRVC_WHTHR ='NO'
	WHERE SCH_ID=#{schId}
</update>

	<!-- NP멤버가입 후 gen홈페이지에 관리자 회원가입 --> 
	<insert id="insertSchManager" parameterType="SchMemberVO">
	INSERT INTO SCH_MEMBER (
		SCH_ID
		, MEM_ID
		, MEM_PW
		, MEM_NM
		)
	VALUES(
		#{schId,jdbcType=VARCHAR}
		,#{memId,jdbcType=VARCHAR}
		,#{memPw,jdbcType=VARCHAR}
		,#{memNm,jdbcType=VARCHAR}
	
		)
	</insert>
	
	<!-- NP에서 비밀번호 변경 후 gen홈페이지에 관리자 비밀번호 동일하게변경 --> 
	<update id="updateSchManager" parameterType="SchMemberVO">
		UPDATE
		SCH_MEMBER
		SET
		MEM_PW = #{memPw, jdbcType=VARCHAR}
		WHERE
		MEM_ID = #{memId,jdbcType=VARCHAR}
	</update>
	
</mapper> 